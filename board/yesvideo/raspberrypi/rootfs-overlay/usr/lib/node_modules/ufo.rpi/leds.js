var gpio = require('rpi-gpio');
var piblaster = require('pi-blaster.js');
var pins = require('./pins');

function reset() {
    pins.leds.forEach(function(pin) {gpio.setup(pin, gpio.DIR_OUT)});
    gpio.setup(pins.dimming, gpio.DIR_OUT);
    dim(0);
}

function dim(pct) {
    pct = Math.min(100, Math.max(0, pct));
    pct /= 100;
    piblaster.setPwm(pins.dimmingBcm, pct);
};

function set(id, onOff, cb) {
    var ix = (id - 1) % pins.leds.length;

    for (i = 0; i < pins.leds.length; i++) {
        if (i != ix) {
            gpio.write(pins.leds[i], false);
        }
    }
    gpio.write(pins.leds[ix], onOff, cb);
}

function on(id, cb) {
    set(id, true, cb);
}

function off(id, cb) {
    set(id, false, cb);
}

function allOff(id, cb) {
    for (i = 0; i < pins.leds.length; i++) {
        gpio.write(pins.leds[i], false);
    }
}

module.exports = {
    reset: reset,
    dim: dim,
    set: set,
    on: on,
    off: off,
    allOff: allOff
};