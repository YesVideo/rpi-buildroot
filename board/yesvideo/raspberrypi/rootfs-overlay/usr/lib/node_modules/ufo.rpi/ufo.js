var express = require('express.io');
var gpio = require('rpi-gpio');
var piblaster = require('pi-blaster.js');

var pins = require('./pins');
var interrupts = require('./interrupts');
var leds = require('./leds');
var servo = require('./servo');
var laser = require('./laser');
var shutter = require('./shutter');
var test = require('./test');


var app = express();
app.http().io()

function reset() {
    interrupts.reset();
    leds.reset();
    servo.reset();
    laser.reset();
    shutter.reset();
    shutter.notify(onShutter);
    test.reset();
}

reset();

function onShutter() {
    app.io.broadcast('shutter');
}

app.post('/reset', function(req, res){
    reset();
    res.send('UFO reset');
});

app.post('/leds/dim/:val(\\d+)', function(req, res) {
    var val = req.params.val;
    val = Math.min(100, Math.max(0, val));

    leds.dim(val);
    res.send('led dim => ' + val + '%');
});

app.post('/leds/0', function(req, res) {
    leds.allOff();
    res.send('leds off');
});

app.post('/leds/:id([1-8])/:val([01])', function(req, res) {
    var id = req.params.id;
    var val = req.params.val == '1';

    leds.set(id, val, function() {
        res.send('led ' + id + ' ' + (val ? 'on' : 'off'));
    });
});

app.post('/servo/:deg(\\d+)', function(req, res) {
    var deg = parseInt(req.params.deg);

    if (deg < 0 || deg > 180) {
        res.send("Invalid degrees: " + req.params.deg);
    }
    else {
        servo.set(deg, function() {
            res.send('servo => ' + deg + ' deg');
        });
    }
});

app.post('/laser/:val([01])', function(req, res) {
    var val = req.params.val == '1';
    
    laser.set(val, function() {
        res.send('laser ' + (val ? 'on' : 'off'));
    });
});

app.get('/*', function(req, res){
    res.send('YesVideo UFO');
});

app.listen(80);
