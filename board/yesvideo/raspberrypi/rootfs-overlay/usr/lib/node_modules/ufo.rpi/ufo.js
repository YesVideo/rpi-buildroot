var express = require('express');
var gpio = require('rpi-gpio');
var piblaster = require('pi-blaster.js');

var pinDimming		= 11;
var pinDimmingBcm	= 17;

var pinServo		= 12;
var pinServoBcm		= 18;

var pinShutter		= 13;
var pinLaser		= 15;
var pinLed1			= 16;
var pinLed2			= 18;
var pinLed3			= 22;
var pinLed4			= 29;
var pinLed5			= 31;
var pinLed6			= 32;
var pinLed7			= 33;
var pinLed8			= 35;
	
var pinTestNextLed	= 19;
var pinTestDimLed	= 21;
var pinTestLaser	= 23;
var pinTestServo	= 24;
var pinTestReset	= 26;
var pinTestReady	= 36;

var inputPins = [
    pinShutter,
    pinTestNextLed,
    pinTestDimLed,
    pinTestLaser,
    pinTestServo,
    pinTestReset
];

var outputPins = [
    pinLaser,
    pinLed1,
    pinLed2,
    pinLed3,
    pinLed4,
    pinLed5,
    pinLed6,
    pinLed7,
    pinLed8,
    pinTestReady
];

var ledPins = [
    pinLed1,
    pinLed2,
    pinLed3,
    pinLed4,
    pinLed5,
    pinLed6,
    pinLed7,
    pinLed8
];

var currentTestLed = -1;

function testNextLed() {
    
}

function setDimming(pct) {
    pct = Math.min(1, Math.max(0, pct));
    piblaster.setPwm(pinDimmingBcm, pct);
}

function ledOnOff(id, val, cb) {
    gpio.write(ledPins[(id - 1) % ledPins.length], val, cb);
}

function ledOn(id, cb) {
    ledOnOff(id, true, cb);
}

function ledOff(id, cb) {
    ledOnOff(id, false, cb);
}

var servoWatchdog = null;

function setServo(deg, cb) {
    var max = 0.24;
    var min = 0.054;
    deg = Math.min(180, Math.max(0, deg));

    piblaster.setPwm(pinServoBcm, (deg / 180.0) * (max - min) + min, cb);

    clearTimeout(servoWatchdog);
    servoWatchdog = setTimeout(function() {piblaster.setPwm(pinServoBcm, 0)}, 1000);
}

function reset() {
    inputPins.forEach(function(pin) {gpio.setup(pin, gpio.DIR_IN)});
    outputPins.forEach(function(pin) {gpio.setup(pin, gpio.DIR_OUT)});
    setDimming(1);
    setServo(0);
}

reset();

var app = express();

app.get('/', function(req, res){
    res.send('Hello UFO');
});

app.post('/led/:id/:val', function(req, res) {
    var id = req.params.id;
    var val = req.params.val;

    if (id < 1 || id > ledPins.length) {
        res.send("Invalid LED: " + id);
    }
    else {
        val = val == '1';
        ledOnOff(id, val, function() {
            res.send('led ' + id + ' = ' + val);
        });
    }
});

app.post('/servo/:deg', function(req, res) {
    var deg = parseInt(req.params.deg);

    if (deg < 0 || deg > 180) {
        res.send("Invalid degrees: " + req.params.deg);
    }
    else {
        setServo(deg, function() {
            res.send('servo = ' + deg);
        });
    }
});

var server = app.listen(80);
