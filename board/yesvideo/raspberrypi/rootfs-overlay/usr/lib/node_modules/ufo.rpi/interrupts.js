var gpio = require('rpi-gpio');
var EventEmitter = require('events').EventEmitter;

var pins = [];
var events = [];

var vals = [];
var pollFreq = 100;
var poller = null;

function checkVals() {
    pins.forEach(function(pin) {
        gpio.read(pin, function(err, val) {
           if (val != vals[pin]) {
               vals[pin] = val;
               events[pin].emit('change', val);
           }
        });
    });
}

function start() {
    stop();
    poller = setInterval(checkVals, pollFreq);
}

function stop() {
    clearInterval(poller);
}

function reset() {
    pins = [];
    vals = [];
    events.forEach(function(e) {
        if (e != null) {
            e.removeAllListeners();
        }
    });
    events = [];
    start();
}

function setPollFrequency(freq) {
    pollFreq = freq;
}

function addListener(pin, cb) {
    events[pin].on('change', cb);
}

function watch(pin, cb) {
    if (pins.indexOf(pin) < 0) {
        gpio.setup(pin, gpio.DIR_IN, function() {
            pins.push(pin);
            events[pin] = new EventEmitter();
            addListener(pin, cb);
        });
    }
    else {
        addListener(pin, cb);
    }
}

start();

module.exports = {
    reset: reset,
    setPollFrequency: setPollFrequency,
    watch: watch,
    stop: stop
};